{
  "version": 3,
  "sources": ["../../../../../app/routes/__app/sales/deposits.tsx"],
  "sourcesContent": ["import * as React from \"react\";\r\nimport { Link, useLoaderData, useOutlet, useParams } from \"@remix-run/react\";\r\nimport type { LoaderArgs } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { CevronDownIcon } from \"~/components\";\r\nimport { getDepositListItems } from \"~/models/deposit.server\";\r\nimport { requireUser } from \"~/session.server\";\r\nimport { currencyFormatter } from \"~/utils\";\r\nimport clsx from \"clsx\";\r\n\r\nexport async function loader({ request }: LoaderArgs) {\r\n  await requireUser(request);\r\n  return json({\r\n    deposits: await getDepositListItems(),\r\n  });\r\n}\r\n\r\nexport default function Deposits() {\r\n  const data = useLoaderData<typeof loader>();\r\n  const outlet = useOutlet();\r\n  const { depositId } = useParams();\r\n  const depositNotFound =\r\n    depositId && data.deposits.every((d) => d.id !== depositId);\r\n  return (\r\n    <div className=\"overflow-hidden rounded-lg border border-gray-200\">\r\n      {depositNotFound ? (\r\n        <div className=\"p-12 text-red-500\">\r\n          No deposit found with the ID of \"{depositId}\"\r\n        </div>\r\n      ) : null}\r\n      <table className=\"w-full\">\r\n        <thead className=\"border-b-2 border-gray-200\">\r\n          <tr>\r\n            <th className=\"border border-gray-100 py-2 px-4\"></th>\r\n            <th className=\"border border-gray-100 py-2 px-4\">Date</th>\r\n            <th className=\"border border-gray-100 py-2 px-4\">Invoice</th>\r\n            <th className=\"border border-gray-100 py-2 px-4\">Customer</th>\r\n            <th className=\"border border-gray-100 py-2 px-4\">Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"max-h-[100px]\">\r\n          {data.deposits.map((d) => (\r\n            <React.Fragment key={d.id}>\r\n              <tr>\r\n                <td className=\"border border-gray-100 py-2 px-4\">\r\n                  <Link\r\n                    to={d.id === depositId ? \".\" : d.id}\r\n                    className=\"flex justify-center\"\r\n                  >\r\n                    <CevronDownIcon\r\n                      className={clsx({\r\n                        \"-rotate-90\": d.id === depositId,\r\n                      })}\r\n                    />\r\n                  </Link>\r\n                </td>\r\n                <td className=\"border border-gray-100 py-2 px-4\">\r\n                  {d.depositDateFormatted}\r\n                </td>\r\n                <td className=\"border border-gray-100 py-2 px-4\">\r\n                  <Link\r\n                    className=\"text-blue-600 underline\"\r\n                    to={`../invoices/${d.invoice.id}`}\r\n                  >\r\n                    {d.invoice.number}\r\n                  </Link>\r\n                </td>\r\n                <td className=\"border border-gray-100 py-2 px-4\">\r\n                  <Link\r\n                    className=\"text-blue-600 underline\"\r\n                    to={`../customers/${d.invoice.customer.id}`}\r\n                  >\r\n                    {d.invoice.customer.name}\r\n                  </Link>\r\n                </td>\r\n                <td className=\"border border-gray-100 py-2 px-4\">\r\n                  {currencyFormatter.format(d.amount)}\r\n                </td>\r\n              </tr>\r\n              {d.id === depositId ? (\r\n                <tr>\r\n                  <td colSpan={5}>{outlet}</td>\r\n                </tr>\r\n              ) : null}\r\n            </React.Fragment>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../../../../app/routes/__app/sales/deposits/$depositId.tsx"],
  "sourcesContent": ["import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\r\nimport { Form, useLoaderData } from \"@remix-run/react\";\r\nimport { redirect, json } from \"@remix-run/node\";\r\nimport { deleteDeposit, getDepositDetails } from \"~/models/deposit.server\";\r\nimport { requireUser } from \"~/session.server\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { TrashIcon } from \"~/components\";\r\n\r\nexport async function loader({ request, params }: LoaderArgs) {\r\n  await requireUser(request);\r\n  const { depositId } = params;\r\n  invariant(typeof depositId === \"string\", \"params.depositId is not available\");\r\n  const depositDetails = await getDepositDetails(depositId);\r\n  if (!depositDetails) {\r\n    throw new Response(\"not found\", { status: 404 });\r\n  }\r\n\r\n  return json({\r\n    depositNote: depositDetails.note,\r\n  });\r\n}\r\n\r\nexport async function action({ request, params }: ActionArgs) {\r\n  const { depositId } = params;\r\n  invariant(typeof depositId === \"string\", \"params.depositId is not available\");\r\n  const formData = await request.formData();\r\n  const intent = formData.get(\"intent\");\r\n  invariant(typeof intent === \"string\", \"intent must be a string\");\r\n  switch (intent) {\r\n    case \"delete\": {\r\n      await deleteDeposit(depositId);\r\n      return redirect(\"/sales/deposits\");\r\n    }\r\n    default: {\r\n      throw new Error(`Unsupported intent: ${intent}`);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function DepositRoute() {\r\n  const data = useLoaderData<typeof loader>();\r\n  return (\r\n    <div className=\"p-8\">\r\n      <div className=\"flex justify-between\">\r\n        {data.depositNote ? (\r\n          <span>\r\n            Note:\r\n            <br />\r\n            <span className=\"pl-1\">{data.depositNote}</span>\r\n          </span>\r\n        ) : (\r\n          <span className=\"text-m-p-sm md:text-d-p-sm uppercase text-gray-500\">\r\n            No note\r\n          </span>\r\n        )}\r\n        <div>\r\n          <Form method=\"post\">\r\n            <button\r\n              type=\"submit\"\r\n              title=\"Delete deposit\"\r\n              name=\"intent\"\r\n              value=\"delete\"\r\n            >\r\n              <TrashIcon />\r\n            </button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CatchBoundary() {\r\n  // no outlet is rendered if it doesn't match a deposit in the UI\r\n  // so this should never be called\r\n  return null;\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAGA,qBAAiD;AACjD,qBAA4B;AAJ5B;AAuCe,SAAR,eAAgC;AACrC,QAAM,OAAO,cAA6B;AAC1C,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb,6DAAC;AAAA,MAAI,WAAU;AAAA,MACZ;AAAA,aAAK,cACJ,mDAAC;AAAA,UAAK;AAAA;AAAA,YAEJ,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,mBAAI;AAAA,YACJ,mDAAC;AAAA,cAAK,WAAU;AAAA,cAAQ,eAAK;AAAA,eAA7B;AAAA;AAAA;AAAA;AAAA,mBAAyC;AAAA;AAAA,WAH3C;AAAA;AAAA;AAAA;AAAA,eAIA,IAEA,mDAAC;AAAA,UAAK,WAAU;AAAA,UAAqD;AAAA,WAArE;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEF,mDAAC;AAAA,UACC,6DAAC;AAAA,YAAK,QAAO;AAAA,YACX,6DAAC;AAAA,cACC,MAAK;AAAA,cACL,OAAM;AAAA,cACN,MAAK;AAAA,cACL,OAAM;AAAA,cAEN,6DAAC,eAAD;AAAA;AAAA;AAAA;AAAA,qBAAW;AAAA,eANb;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA,WAVF;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA;AAAA,OAvBF;AAAA;AAAA;AAAA;AAAA,WAwBA;AAAA,KAzBF;AAAA;AAAA;AAAA;AAAA,SA0BA;AAEJ;AAEO,SAAS,gBAAgB;AAG9B,SAAO;AACT;",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../../../app/routes/__app/sales/customers.tsx"],
  "sourcesContent": ["import {\r\n  NavLink,\r\n  Outlet,\r\n  useLoaderData,\r\n  useTransition,\r\n} from \"@remix-run/react\";\r\nimport type { LoaderArgs } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useSpinDelay } from \"spin-delay\";\r\nimport { FilePlusIcon } from \"~/components\";\r\nimport { requireUser } from \"~/session.server\";\r\nimport { getCustomerListItems } from \"~/models/customer.server\";\r\n\r\ntype LoadingCustomer = Awaited<ReturnType<typeof getCustomerListItems>>[number];\r\n\r\nexport async function loader({ request }: LoaderArgs) {\r\n  await requireUser(request);\r\n  return json({\r\n    customers: await getCustomerListItems(),\r\n  });\r\n}\r\n\r\nexport default function Customers() {\r\n  const { customers } = useLoaderData<typeof loader>();\r\n  const transition = useTransition();\r\n\r\n  let loadingCustomer: LoadingCustomer | undefined;\r\n\r\n  if (transition.location?.state) {\r\n    loadingCustomer = (transition.location?.state as any)?.customer;\r\n  }\r\n\r\n  const showSkeleton = useSpinDelay(Boolean(loadingCustomer), {\r\n    delay: 200,\r\n    minDuration: 300,\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex overflow-hidden rounded-lg border border-gray-100\">\r\n      <div className=\"w-1/2 border-r border-gray-100\">\r\n        <NavLink\r\n          to=\"new\"\r\n          prefetch=\"intent\"\r\n          className={({ isActive }) =>\r\n            \"block border-b-4 border-gray-100 py-3 px-4 hover:bg-gray-50\" +\r\n            \" \" +\r\n            (isActive ? \"bg-gray-50\" : \"\")\r\n          }\r\n        >\r\n          <span className=\"flex gap-1\">\r\n            <FilePlusIcon /> <span>Create new customer</span>\r\n          </span>\r\n        </NavLink>\r\n        <div className=\"max-h-96 overflow-y-scroll\">\r\n          {customers.map((customer) => (\r\n            <NavLink\r\n              key={customer.id}\r\n              to={customer.id}\r\n              state={{ customer }}\r\n              prefetch=\"intent\"\r\n              className={({ isActive }) =>\r\n                \"block border-b border-gray-50 py-3 px-4 hover:bg-gray-50\" +\r\n                \" \" +\r\n                (isActive ? \"bg-gray-50\" : \"\")\r\n              }\r\n            >\r\n              <div className=\"flex justify-between text-[length:14px] font-bold leading-6\">\r\n                <div>{customer.name}</div>\r\n              </div>\r\n              <div className=\"flex justify-between text-[length:12px] font-medium leading-4 text-gray-400\">\r\n                <div>{customer.email}</div>\r\n              </div>\r\n            </NavLink>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"flex w-1/2 flex-col justify-between\">\r\n        {loadingCustomer && showSkeleton ? (\r\n          <CustomerSkeleton\r\n            name={loadingCustomer.name}\r\n            email={loadingCustomer.email}\r\n          />\r\n        ) : (\r\n          <Outlet />\r\n        )}\r\n        <small className=\"p-2 text-center\">\r\n          Note: this is arbitrarily slow to demonstrate pending UI.\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CustomerSkeleton({ name, email }: { name: string; email: string }) {\r\n  return (\r\n    <div className=\"relative p-10\">\r\n      <div className=\"text-[length:14px] font-bold leading-6\">{email}</div>\r\n      <div className=\"text-[length:32px] font-bold leading-[40px]\">{name}</div>\r\n      <div className=\"h-4\" />\r\n      <div className=\"text-m-h3 font-bold leading-8\">Invoices</div>\r\n      <div className=\"h-4\" />\r\n      <div>\r\n        <div className=\"flex h-[56px] items-center border-t border-gray-100\">\r\n          <div className=\"h-[14px] w-full animate-pulse rounded bg-gray-300\">\r\n            &nbsp;\r\n          </div>\r\n        </div>\r\n        <div className=\"flex h-[56px] items-center border-t border-gray-100\">\r\n          <div className=\"h-[14px] w-full animate-pulse rounded bg-gray-300\">\r\n            &nbsp;\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],
  "mappings": "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",
  "names": []
}

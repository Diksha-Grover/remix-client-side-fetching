{
  "version": 3,
  "sources": ["../../../../../../app/routes/__app/sales/customers/$customerId.tsx"],
  "sourcesContent": ["import type { LoaderArgs } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport {\r\n  Link,\r\n  useCatch,\r\n  useFetcher,\r\n  useLoaderData,\r\n  useParams,\r\n} from \"@remix-run/react\";\r\nimport { useEffect } from \"react\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { InvoiceDetailsFallback } from \"~/components\";\r\nimport { getCustomerDetails, getCustomerInfo } from \"~/models/customer.server\";\r\nimport { requireUser } from \"~/session.server\";\r\nimport { currencyFormatter } from \"~/utils\";\r\n\r\ntype CustomerDetails = NonNullable<\r\n  Awaited<ReturnType<typeof getCustomerDetails>>\r\n>;\r\n\r\nexport async function loader({ request, params }: LoaderArgs) {\r\n  await requireUser(request);\r\n\r\n  const { customerId } = params;\r\n  invariant(\r\n    typeof customerId === \"string\",\r\n    \"params.customerId is not available\",\r\n  );\r\n  if (new URL(request.url).searchParams.get(\"invoiceDetails\")) {\r\n    return json({\r\n      customerDetails: await getCustomerDetails(customerId),\r\n    });\r\n  }\r\n\r\n  const customerInfo = await getCustomerInfo(customerId);\r\n  if (!customerInfo) {\r\n    throw new Response(\"not found\", { status: 404 });\r\n  }\r\n\r\n  return json({\r\n    customerInfo,\r\n  });\r\n}\r\n\r\nconst lineItemClassName = \"border-t border-gray-100 text-[14px] h-[56px]\";\r\n\r\nexport default function CustomerRoute() {\r\n  const data = useLoaderData<typeof loader>();\r\n  if (!(\"customerInfo\" in data)) {\r\n    throw new Error(\"customerInfo is not available\");\r\n  }\r\n  const params = useParams();\r\n  const { load: loadInvoiceDetails, ...invoiceDetailsFetcher } = useFetcher();\r\n\r\n  useEffect(() => {\r\n    loadInvoiceDetails(\r\n      `/sales/customers/${params.customerId}?invoiceDetails=true`,\r\n    );\r\n  }, [loadInvoiceDetails, params.customerId]);\r\n\r\n  return (\r\n    <div className=\"relative p-10\">\r\n      <div className=\"text-[length:14px] font-bold leading-6\">\r\n        {data.customerInfo.email}\r\n      </div>\r\n      <div className=\"text-[length:32px] font-bold leading-[40px]\">\r\n        {data.customerInfo.name}\r\n      </div>\r\n      <div className=\"h-4\" />\r\n      <div className=\"text-m-h3 font-bold leading-8\">Invoices</div>\r\n      <div className=\"h-4\" />\r\n      {invoiceDetailsFetcher.state === \"idle\" && invoiceDetailsFetcher.data ? (\r\n        <table className=\"w-full\">\r\n          <tbody>\r\n            {(\r\n              invoiceDetailsFetcher.data.customerDetails as CustomerDetails\r\n            ).invoiceDetails.map((invoiceDetails) => (\r\n              <tr key={invoiceDetails.id} className={lineItemClassName}>\r\n                <td>\r\n                  <Link\r\n                    className=\"text-blue-600 underline\"\r\n                    to={`../../invoices/${invoiceDetails.id}`}\r\n                  >\r\n                    {invoiceDetails.number}\r\n                  </Link>\r\n                </td>\r\n                <td\r\n                  className={\r\n                    \"text-center uppercase\" +\r\n                    \" \" +\r\n                    (invoiceDetails.dueStatus === \"paid\"\r\n                      ? \"text-green-brand\"\r\n                      : invoiceDetails.dueStatus === \"overdue\"\r\n                      ? \"text-red-brand\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  {invoiceDetails.dueStatusDisplay}\r\n                </td>\r\n                <td className=\"text-right\">\r\n                  {currencyFormatter.format(invoiceDetails.totalAmount)}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <InvoiceDetailsFallback />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport function CatchBoundary() {\r\n  const caught = useCatch();\r\n  const params = useParams();\r\n\r\n  if (caught.status === 404) {\r\n    return (\r\n      <div className=\"p-12 text-red-500\">\r\n        No customer found with the ID of \"{params.customerId}\"\r\n      </div>\r\n    );\r\n  }\r\n\r\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAAA,gBAA0B;AAG1B,sBAAoD;AACpD,qBAA4B;AAb5B;AA4CA,IAAM,oBAAoB;AAEX,SAAR,gBAAiC;AACtC,QAAM,OAAO,cAA6B;AAC1C,MAAI,EAAE,kBAAkB,OAAO;AAC7B,UAAM,IAAI,MAAM,+BAA+B;AAAA,EACjD;AACA,QAAM,SAAS,UAAU;AACzB,QAAM,EAAE,MAAM,uBAAuB,sBAAsB,IAAI,WAAW;AAE1E,+BAAU,MAAM;AACd;AAAA,MACE,oBAAoB,OAAO;AAAA,IAC7B;AAAA,EACF,GAAG,CAAC,oBAAoB,OAAO,UAAU,CAAC;AAE1C,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb;AAAA,yDAAC;AAAA,QAAI,WAAU;AAAA,QACZ,eAAK,aAAa;AAAA,SADrB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACZ,eAAK,aAAa;AAAA,SADrB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAI,WAAU;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA,aAAqB;AAAA,MACrB,mDAAC;AAAA,QAAI,WAAU;AAAA,QAAgC;AAAA,SAA/C;AAAA;AAAA;AAAA;AAAA,aAAuD;AAAA,MACvD,mDAAC;AAAA,QAAI,WAAU;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA,aAAqB;AAAA,MACpB,sBAAsB,UAAU,UAAU,sBAAsB,OAC/D,mDAAC;AAAA,QAAM,WAAU;AAAA,QACf,6DAAC;AAAA,UAEG,gCAAsB,KAAK,gBAC3B,eAAe,IAAI,CAAC,mBACpB,mDAAC;AAAA,YAA2B,WAAW;AAAA,YACrC;AAAA,iEAAC;AAAA,gBACC,6DAAC;AAAA,kBACC,WAAU;AAAA,kBACV,IAAI,kBAAkB,eAAe;AAAA,kBAEpC,yBAAe;AAAA,mBAJlB;AAAA;AAAA;AAAA;AAAA,uBAKA;AAAA,iBANF;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA,cACA,mDAAC;AAAA,gBACC,WACE,4BAEC,eAAe,cAAc,SAC1B,qBACA,eAAe,cAAc,YAC7B,mBACA;AAAA,gBAGL,yBAAe;AAAA,iBAXlB;AAAA;AAAA;AAAA;AAAA,qBAYA;AAAA,cACA,mDAAC;AAAA,gBAAG,WAAU;AAAA,gBACX,4BAAkB,OAAO,eAAe,WAAW;AAAA,iBADtD;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA;AAAA,aAxBO,eAAe,IAAxB;AAAA;AAAA;AAAA;AAAA,iBAyBA,CACD;AAAA,WA9BH;AAAA;AAAA;AAAA;AAAA,eA+BA;AAAA,SAhCF;AAAA;AAAA;AAAA;AAAA,aAiCA,IAEA,mDAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,aAAwB;AAAA;AAAA,KA9C5B;AAAA;AAAA;AAAA;AAAA,SAgDA;AAEJ;AACO,SAAS,gBAAgB;AAC9B,QAAM,SAAS,SAAS;AACxB,QAAM,SAAS,UAAU;AAEzB,MAAI,OAAO,WAAW,KAAK;AACzB,WACE,mDAAC;AAAA,MAAI,WAAU;AAAA,MAAoB;AAAA;AAAA,QACE,OAAO;AAAA,QAAW;AAAA;AAAA,OADvD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,EAEJ;AAEA,QAAM,IAAI,MAAM,2CAA2C,OAAO,QAAQ;AAC5E;",
  "names": ["import_react"]
}

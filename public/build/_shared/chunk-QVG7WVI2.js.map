{
  "version": 3,
  "sources": ["../../../app/components.tsx"],
  "sourcesContent": ["export const inputClasses =\r\n  \"text-lg w-full rounded border border-gray-500 px-2 py-1\";\r\n\r\nexport const submitButtonClasses =\r\n  \"w-full rounded bg-green-500 py-2 px-4 text-white hover:bg-green-600 focus:bg-green-400\";\r\n\r\nexport const dangerButtonClasses =\r\n  \"w-full rounded bg-red-600 py-2 px-4 text-white hover:bg-red-700 focus:bg-red-500\";\r\n\r\nexport function LabelText({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <div className=\"text-[12px] font-medium uppercase leading-[24px] text-gray-400\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FullFakebooksLogo({\r\n  size,\r\n  position,\r\n}: {\r\n  size: \"sm\" | \"lg\";\r\n  position: \"left\" | \"center\";\r\n}) {\r\n  const [logoSize, textSize] = {\r\n    sm: [`h-4 w-4`, `text-d-p-sm`],\r\n    lg: [`h-12 w-12`, `text-d-h2`],\r\n  }[size];\r\n  return (\r\n    <div\r\n      className={`flex items-center ${\r\n        position === \"center\" ? \"justify-center\" : \"\"\r\n      } text-[color:#23BF1F]`}\r\n    >\r\n      <FakebooksLogo className={`relative top-[1px] ${logoSize}`} />\r\n      <div className=\"w-1\" />\r\n      <div className={`font-display ${textSize}`}>Fakebooks</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FakebooksLogo({ className }: { className: string }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        fill=\"#23BF1F\"\r\n        fillRule=\"evenodd\"\r\n        d=\"M12 3a9 9 0 000 18h4.5c1.398 0 2.097 0 2.648-.228a3 3 0 001.624-1.624C21 18.597 21 17.898 21 16.5V12a9 9 0 00-9-9zm-4 8a1 1 0 011-1h6a1 1 0 110 2H9a1 1 0 01-1-1zm3 4a1 1 0 011-1h3a1 1 0 110 2h-3a1 1 0 01-1-1z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function FilePlusIcon(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg width=\"24px\" height=\"24px\" fill=\"none\" {...props}>\r\n      <path\r\n        stroke=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={1.5}\r\n        d=\"M11.25 19.25h-3.5a2 2 0 0 1-2-2V6.75a2 2 0 0 1 2-2H14L18.25 9v2.25M17 14.75v4.5M19.25 17h-4.5\"\r\n      />\r\n      <path\r\n        stroke=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={1.5}\r\n        d=\"M18 9.25h-4.25V5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function PlusIcon(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg width=\"24px\" height=\"24px\" fill=\"none\" {...props}>\r\n      <path\r\n        stroke=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={1.5}\r\n        d=\"M12 5.75v12.5M18.25 12H5.75\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function MinusIcon(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg width=\"24px\" height=\"24px\" fill=\"none\" {...props}>\r\n      <path\r\n        stroke=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={1.5}\r\n        d=\"M18.25 12.25H5.75\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function CevronDownIcon(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg width={24} height={24} fill=\"none\" {...props}>\r\n      <path\r\n        stroke=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={1.5}\r\n        d=\"M15.25 10.75 12 14.25l-3.25-3.5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function TrashIcon(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg width={24} height={24} fill=\"none\" {...props}>\r\n      <path\r\n        d=\"m5.75 7.75.841 9.673a2 2 0 0 0 1.993 1.827h5.832a2 2 0 0 0 1.993-1.827l.841-9.673H5.75ZM9.75 10.75v5.5M13.25 10.75v5.5M8.75 7.75v-1a2 2 0 0 1 2-2h1.5a2 2 0 0 1 2 2v1M4.75 7.75h13.5\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function LogoutIcon(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg width={24} height={24} fill=\"none\" {...props}>\r\n      <path\r\n        stroke=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={1.5}\r\n        d=\"m15.75 8.75 3.5 3.25-3.5 3.25M19 12h-8.25M15.25 4.75h-8.5a2 2 0 0 0-2 2v10.5a2 2 0 0 0 2 2h8.5\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function UpRightArrowIcon(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg width={24} height={24} fill=\"none\" {...props}>\r\n      <path\r\n        stroke=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={1.5}\r\n        d=\"M17.25 15.25v-8.5h-8.5M17 7 6.75 17.25\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function SpinnerIcon(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg width={24} height={24} fill=\"none\" {...props}>\r\n      <path\r\n        d=\"M12 4.75v1.5M17.127 6.873l-1.061 1.061M19.25 12h-1.5M17.127 17.127l-1.061-1.061M12 17.75v1.5M7.934 16.066l-1.06 1.06M6.25 12h-1.5M7.934 7.934l-1.06-1.06\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function InvoiceDetailsFallback() {\r\n  return (\r\n    <div>\r\n      <div className=\"flex h-[56px] items-center border-t border-gray-100\">\r\n        <div className=\"h-[14px] w-full animate-pulse rounded bg-gray-300\">\r\n          &nbsp;\r\n        </div>\r\n      </div>\r\n      <div className=\"flex h-[56px] items-center border-t border-gray-100\">\r\n        <div className=\"h-[14px] w-full animate-pulse rounded bg-gray-300\">\r\n          &nbsp;\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ErrorFallback({\r\n  message = \"There was a problem. Sorry.\",\r\n}: {\r\n  message?: string;\r\n}) {\r\n  return (\r\n    <div className=\"absolute inset-0 flex justify-center bg-red-100 pt-4\">\r\n      <div className=\"text-red-brand text-center\">\r\n        <div className=\"text-[14px] font-bold\">Oh snap!</div>\r\n        <div className=\"px-2 text-[12px]\">{message}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
